name: Security Scan

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  schedule:
    - cron: '0 0 * * *'

jobs:
  gitleaks:
    name: GitLeaks - Secret Scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trivy-fs:
    name: Trivy - Filesystem Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner (Filesystem)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'
          severity: 'CRITICAL,HIGH'
      
      - name: Upload Trivy results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trivy-fs-results
          path: 'trivy-fs-results.sarif'

  trivy-config:
    name: Trivy - Config Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy config scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-config-results.sarif'
          severity: 'CRITICAL,HIGH'
      
      - name: Upload Trivy config results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trivy-config-results
          path: 'trivy-config-results.sarif'

  npm-audit:
    name: NPM Audit - Frontend
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'front/') || github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json
      
      - name: Install dependencies
        working-directory: front/
        run: npm ci
      
      - name: Run npm audit
        working-directory: front/
        run: |
          npm audit --audit-level=high --json > npm-audit.json || true
          npm audit --audit-level=high
        continue-on-error: true
      
      - name: Upload npm audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: npm-audit-results
          path: front//npm-audit.json

  go-security:
    name: Go Security - Backend
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'back/') || github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache-dependency-path: back//go.sum
      
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-fmt sarif -out gosec-results.sarif ./...'
        continue-on-error: true
      
      - name: Upload Gosec results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: gosec-results
          path: 'gosec-results.sarif'
      
      - name: Run govulncheck
        working-directory: back/
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high



  terraform-security:
    name: Terraform Security - tfsec
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'infra/') || github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: infra
          format: sarif
          soft_fail: true
      
      - name: Upload tfsec results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tfsec-results
          path: results.sarif

  docker-security:
    name: Docker Image Security
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'Dockerfile') || github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build Docker image (Backend)
        working-directory: back/
        run: docker build -t feed-bower-api:test .
      
      - name: Run Trivy on Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'feed-bower-api:test'
          format: 'sarif'
          output: 'trivy-docker-results.sarif'
          severity: 'CRITICAL,HIGH'
      
      - name: Upload Trivy Docker results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trivy-docker-results
          path: 'trivy-docker-results.sarif'

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [gitleaks, trivy-fs, trivy-config, npm-audit, go-security, terraform-security]
    if: always()
    steps:
      - name: Check security scan results
        run: |
          echo "## Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ GitLeaks: ${{ needs.gitleaks.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Trivy FS: ${{ needs.trivy-fs.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Trivy Config: ${{ needs.trivy-config.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ NPM Audit: ${{ needs.npm-audit.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Go Security: ${{ needs.go-security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Terraform Security: ${{ needs.terraform-security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "For details, check the [Security] tab." >> $GITHUB_STEP_SUMMARY
